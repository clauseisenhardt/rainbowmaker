{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput\n        type=\"email\"\n        name=\"email\"\n        ngModel\n        placeholder=\"E-mail\"\n        #emailInput=\"ngModel\"\n        required email\n        >\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email!</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput\n        type=\"password\"\n        name=\"password\"\n        ngModel\n        placeholder=\"Password\"\n        #passwordInput\n        required\n      >\n      <mat-error *ngIf=\"!passwordInput.invalid\">Please enter a valid password!</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\"\n      *ngIf=\"!isLoading\">\n        Signup\n    </button>\n  </form>\n</mat-card>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      console.log(form.value);\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n   ngOnDestroy() {\n     this.authStatusSub.unsubscribe();\n   }\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AngularMaterialModule } from \"../angular-meterial.module\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AngularMaterialModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput\n        type=\"email\"\n        name=\"email\"\n        ngModel\n        placeholder=\"E-mail\"\n        #emailInput=\"ngModel\"\n        required email\n        >\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email!</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput\n        type=\"password\"\n        name=\"password\"\n        ngModel\n        placeholder=\"Password\"\n        #passwordInput\n        required\n      >\n      <mat-error *ngIf=\"!passwordInput.invalid\">Please enter a valid password!</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\"\n      *ngIf=\"!isLoading\">\n        Login\n    </button>\n  </form>\n</mat-card>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  // selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    console.log(form.value);\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}